//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: jmes/oracle/v1beta1/query.proto

package jmes.oracle.v1beta1;

@kotlin.jvm.JvmSynthetic
inline fun queryExchangeRateResponse(block: jmes.oracle.v1beta1.QueryExchangeRateResponseKt.Dsl.() -> Unit): jmes.oracle.v1beta1.QueryOuterClass.QueryExchangeRateResponse =
  jmes.oracle.v1beta1.QueryExchangeRateResponseKt.Dsl._create(jmes.oracle.v1beta1.QueryOuterClass.QueryExchangeRateResponse.newBuilder()).apply { block() }._build()
object QueryExchangeRateResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: jmes.oracle.v1beta1.QueryOuterClass.QueryExchangeRateResponse.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: jmes.oracle.v1beta1.QueryOuterClass.QueryExchangeRateResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): jmes.oracle.v1beta1.QueryOuterClass.QueryExchangeRateResponse = _builder.build()

    /**
     * <pre>
     * exchange_rate defines the exchange rate of Luna denominated in various Jmes
     * </pre>
     *
     * <code>string exchange_rate = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     */
    var exchangeRate: kotlin.String
      @JvmName("getExchangeRate")
      get() = _builder.getExchangeRate()
      @JvmName("setExchangeRate")
      set(value) {
        _builder.setExchangeRate(value)
      }
    /**
     * <pre>
     * exchange_rate defines the exchange rate of Luna denominated in various Jmes
     * </pre>
     *
     * <code>string exchange_rate = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];</code>
     */
    fun clearExchangeRate() {
      _builder.clearExchangeRate()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun jmes.oracle.v1beta1.QueryOuterClass.QueryExchangeRateResponse.copy(block: jmes.oracle.v1beta1.QueryExchangeRateResponseKt.Dsl.() -> Unit): jmes.oracle.v1beta1.QueryOuterClass.QueryExchangeRateResponse =
  jmes.oracle.v1beta1.QueryExchangeRateResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()
